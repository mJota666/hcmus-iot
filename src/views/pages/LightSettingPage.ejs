<div
  class="relative flex flex-col sm:flex-row justify-between gap-6 items-center bg-gray-400 p-6 font-MuseoModerno"
  style="height: 92vh; width: 100vw"
>
<div
id="adjust-light-brightness"
class="w-full h-3/6 sm:w-5/12 sm:h-full rounded-2xl shadow-xl bg-white flex flex-col justify-center items-center gap-4"
>
    <div class="font-bold text-sm sm:text-2xl w-full h-1/6 flex flex-col justify-center items-center">Adjust Brightness</div>
    <div class="w-full h-5/6 flex flex-col justify-start items-center gap-4 pt-10">
      <!-- Mode 1: Slider -->
      <div class="p-4 w-3/5 h-16 bg-gray-400 text-white rounded-3xl shadow-2xl text-center flex justify-between items-center">
        <span id="mode1-value"><%=lightMode1%></span>
        <input type="range" id="mode1-slider" class="w-3/4" min="0" max="100" value="<%=lightMode1%>" />
      </div>
    
      <!-- Mode 2: Slider -->
      <div class="p-4 w-3/5 h-16 bg-gray-500 text-white rounded-3xl shadow-2xl text-center flex justify-between items-center">
        <span id="mode2-value"><%=lightMode2%></span>
        <input type="range" id="mode2-slider" class="w-3/4" min="0" max="100" value="<%=lightMode2%>" />
      </div>
    
      <!-- Mode 3: Slider -->
      <div class="p-4 w-3/5 h-16 bg-gray-600 text-white rounded-3xl shadow-2xl text-center flex justify-between items-center">
        <span id="mode3-value"><%=lightMode3%></span>
        <input type="range" id="mode3-slider" class="w-3/4" min="0" max="100" value="<%=lightMode3%>" />
      </div>
    
      <!-- Mode 4: Fixed at 0 -->
      <div class="p-4 w-3/5 h-16 bg-gray-950 text-white rounded-3xl shadow-2xl text-center flex justify-center items-center">
        <span>0</span>
      </div>
    
      <!-- Submit Button -->
      <button id="submitBrightnessChange" class="w-3/5 h-10 bg-blue-500 text-white rounded-3xl hover:bg-blue-700 transition-all duration-300 shadow-2xl text-center flex justify-center items-center">Submit Change Brightness</button>
    </div>
    
    
  </div>

  <div
    id="adjust-light-color"
    class="w-full h-3/6 sm:w-7/12 sm:h-full rounded-2xl shadow-xl bg-white flex flex-col justify-center items-center gap-8"
  >
    <div class="font-bold text-sm sm:text-2xl w-full h-1/6 flex flex-col justify-center items-center">Adjust Color</div>
    <div class="w-full h-5/6 flex flex-col justify-start items-center gap-4  pt-10">
      <input
        type="color"
        id="colorPicker"
        value="#ff0000" 
        class="w-52 h-52 rounded-3xl border-none"
      />
      <button id="submitColorBtn" class="w-52 h-10 bg-blue-500 text-white rounded-3xl hover:bg-blue-700 transition-all duration-300 shadow-2xl text-center flex justify-center items-center">Submit Color</button>
    </div>
  </div>
</div>

<script>
  const submitData = (data) => {
    fetch('http://localhost:3000/api/publish_data', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      .then(response => response.json())
      .then(data => {
        console.log('Message published:', data);
      })
      .catch(error => {
        console.error('Error publishing message:', error);
      });
  };
  const updateLightColor = (data) => {
    fetch('http://localhost:3000/api/update_color', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      .then(response => response.json())
      .then(data => {
        console.log('Message published:', data);
      })
      .catch(error => {
        console.error('Error publishing message:', error);
      });
  };
  const updateLightBrightness = (data) => {
    fetch('http://localhost:3000/api/update_brightness', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      .then(response => response.json())
      .then(data => {
        console.log('Message published:', data);
      })
      .catch(error => {
        console.error('Error publishing message:', error);
      });
  };

  function rgbToHex(r, g, b) {
      r = Math.max(0, Math.min(255, r));
      g = Math.max(0, Math.min(255, g));
      b = Math.max(0, Math.min(255, b));

      const hex = ((1 << 24) + (r << 16) + (g << 8) + b)
          .toString(16)
          .slice(1)
          .toUpperCase();

      return `#${hex}`;
  }
  const receiveR = parseInt(`<%=r%>`)
  const receiveG = parseInt(`<%=g%>`)
  const receiveB = parseInt(`<%=b%>`)
  document.getElementById('colorPicker').value = rgbToHex(receiveR, receiveG, receiveB)


  document.getElementById("submitColorBtn").addEventListener("click", () => {
    const colorPicker = document.getElementById("colorPicker").value;
    const hex = colorPicker;
    const r = parseInt(hex.substring(1, 3), 16); // Red
    const g = parseInt(hex.substring(3, 5), 16); // Green
    const b = parseInt(hex.substring(5, 7), 16); // Blue
    const message = {
      title: "update_color",
      value: {
        r: r.toString(),
        g: g.toString(),
        b: b.toString(),
      },
    };
    const colorObject = {
      r: r.toString(),
      g: g.toString(),
      b: b.toString(),
    }
    const data = {
      topic: '22127270/light/update/color',
      message: JSON.stringify(message),
    };
    submitData(data);
    updateLightColor(colorObject);
  });


  // Initialize the default values for the sliders
  let brightnessMode = {
    lightMode1: "100",
    lightMode2: "50",
    lightMode3: "25",
  };

  // Select sliders and submit button
  const mode1Slider = document.getElementById('mode1-slider');
  const mode2Slider = document.getElementById('mode2-slider');
  const mode3Slider = document.getElementById('mode3-slider');
  const submitButton = document.getElementById('submitBrightnessChange');
  // Select the span elements to display the current slider values
  const mode1Value = document.getElementById('mode1-value');
  const mode2Value = document.getElementById('mode2-value');
  const mode3Value = document.getElementById('mode3-value');

  // Listen for slider changes and update the corresponding values
  mode1Slider.addEventListener('input', (event) => {
    brightnessMode.lightMode1 = event.target.value;
    mode1Value.textContent = event.target.value;  // Update the display text for Mode 1
  });

  mode2Slider.addEventListener('input', (event) => {
    brightnessMode.lightMode2 = event.target.value;
    mode2Value.textContent = event.target.value;  // Update the display text for Mode 2
  });

  mode3Slider.addEventListener('input', (event) => {
    brightnessMode.lightMode3 = event.target.value;
    mode3Value.textContent = event.target.value;  // Update the display text for Mode 3
  });

  // Handle the submit button click
  submitButton.addEventListener('click', () => {
    const data = {
      topic: '22127270/light/update/brightness/mode',
      message: JSON.stringify({
        title: "update_brightness_mode",
        value: brightnessMode,
      }),
    };
    submitData(data);
    updateLightBrightness(brightnessMode);
  });
</script>
